parameters:
- name: 'rootFolderPrefix'
  type: string

steps:
- task: FtpUpload@2
  displayName: 'Single file, backslashes, dirty'
  inputs:
    serverEndpoint: FtpUpload
    rootDirectory: src/ftp-upload/${{ parameters.rootFolderPrefix }}/Folder1
    filePatterns: 'Folder With Space\Commands1.txt'
    remoteDirectory: '\site\wwwroot'
  condition: and(succeeded(), contains(variables['Agent.Os'], 'Windows'))
  retryCountOnTaskFailure: 8

- task: FtpUpload@2
  displayName: 'Single file, backslashes, clean'
  inputs:
    serverEndpoint: FtpUpload
    rootDirectory: src/ftp-upload/${{ parameters.rootFolderPrefix }}/Folder1
    filePatterns: 'Folder With Space\Commands1.txt'
    remoteDirectory: '\site\wwwroot'
    clean: true
  condition: and(succeeded(), contains(variables['Agent.Os'], 'Windows'))
  retryCountOnTaskFailure: 8

- task: FtpUpload@2
  displayName: 'Single file, forward slashes, dirty'
  inputs:
    serverEndpoint: FtpUpload
    rootDirectory: src/ftp-upload/${{ parameters.rootFolderPrefix }}/Folder1
    filePatterns: 'Folder With Space/Commands1.txt'
    remoteDirectory: /site/wwwroot
  retryCountOnTaskFailure: 8

- task: FtpUpload@2
  displayName: 'Single file, forward slashes, clean'
  inputs:
    serverEndpoint: FtpUpload
    rootDirectory: src/ftp-upload/${{ parameters.rootFolderPrefix }}/Folder1
    filePatterns: 'Folder With Space/Commands1.txt'
    remoteDirectory: /site/wwwroot
    clean: true
  retryCountOnTaskFailure: 8

- task: FtpUpload@2
  displayName: 'File pattern, backslashes, dirty'
  inputs:
    serverEndpoint: FtpUpload
    rootDirectory: src/ftp-upload/${{ parameters.rootFolderPrefix }}/Folder1
    filePatterns: 'Folder With Space\*.txt'
    remoteDirectory: '\site\wwwroot'
  condition: and(succeeded(), contains(variables['Agent.Os'], 'Windows'))
  retryCountOnTaskFailure: 8

- task: FtpUpload@2
  displayName: 'File pattern, backslashes, clean'
  inputs:
    serverEndpoint: FtpUpload
    rootDirectory: src/ftp-upload/${{ parameters.rootFolderPrefix }}/Folder1
    filePatterns: 'Folder With Space\*.txt'
    remoteDirectory: '\site\wwwroot'
    clean: true
  condition: and(succeeded(), contains(variables['Agent.Os'], 'Windows'))
  retryCountOnTaskFailure: 8

- task: FtpUpload@2
  displayName: 'File pattern, forward slashes, dirty'
  inputs:
    serverEndpoint: FtpUpload
    rootDirectory: src/ftp-upload/${{ parameters.rootFolderPrefix }}/Folder1
    filePatterns: 'Folder With Space/*.txt'
    remoteDirectory: /site/wwwroot
  retryCountOnTaskFailure: 8

- task: FtpUpload@2
  displayName: 'File pattern, forward slashes, clean'
  inputs:
    serverEndpoint: FtpUpload
    rootDirectory: src/ftp-upload/${{ parameters.rootFolderPrefix }}/Folder1
    filePatterns: 'Folder With Space/*.txt'
    remoteDirectory: /site/wwwroot
    clean: true
  retryCountOnTaskFailure: 8

- template: create-dummy-files.yml
  parameters:
    fileCount: 10
    fileName: "largefile"
    fileSize: 524288000

- task: FtpUpload@2
  displayName: 'FTP Upload: 10 large files'
  inputs:
    serverEndpoint: FtpUpload
    rootDirectory: ''
    filePatterns: 'largefile*.txt'
    remoteDirectory: '/upload/FtpUpload-${{ parameters.rootFolderPrefix }}/'

- task: FtpUpload@2
  displayName: 'FTP Upload: Hack to delete contents'
  inputs:
    serverEndpoint: FtpUpload
    rootDirectory: 'src/ftp-upload/${{ parameters.rootFolderPrefix }}/Folder1/Folder With Space'
    remoteDirectory: '/upload/FtpUpload-clone/'
    clean: true
  retryCountOnTaskFailure: 8

- task: FtpUpload@2
  displayName: 'FTPS, multiple patterns, dirty, preserve paths'
  inputs:
    serverEndpoint: 'FtpUpload_FTPS'
    rootDirectory: '$(Build.SourcesDirectory)/src/ftp-upload/${{ parameters.rootFolderPrefix }}/'
    filePatterns: |
      **/*1.txt
      **/*2.txt
    remoteDirectory: /site/wwwroot
    preservePaths: true
  retryCountOnTaskFailure: 8

- task: FtpUpload@2
  displayName: 'FTPS, multiple patterns, clean, preserve paths'
  inputs:
    serverEndpoint: 'FtpUpload_FTPS'
    rootDirectory: '$(Build.SourcesDirectory)/src/ftp-upload/${{ parameters.rootFolderPrefix }}/'
    filePatterns: |
      **/*1.txt
      **/*2.txt
    remoteDirectory: /site/wwwroot
    clean: true
    preservePaths: true
  retryCountOnTaskFailure: 8

- template: create-dummy-files.yml
  parameters:
    fileCount: 1000
    fileName: "small"
    fileSize: 4096

- task: FtpUpload@2
  displayName: 'FTP Upload: 1000 small files'
  inputs:
    serverEndpoint: 'FtpUpload_FTPS'
    rootDirectory: ''
    filePatterns: 'small*.txt'
    remoteDirectory: '/upload/FtpUpload-${{ parameters.rootFolderPrefix }}/'
    clean: true
  retryCountOnTaskFailure: 8
