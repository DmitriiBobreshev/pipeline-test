steps:
- task: HelmInstaller@0
  inputs:
    helmVersion: ${{ parameters.helmVersion }}
    checkLatestHelmVersion: false
    installKubeCtl: true
    checkLatestKubeCtl: true
  displayName: 'Helm installer'

- pwsh: |
    if (${ExpectedVersion} -like "2*") {
      $ActualVersion = helm version
    } else {
      $ActualVersion = helm version --template='{{.Version}}'
    }

    Write-Host "Expected version is 'v${{ parameters.helmVersion }}'"
    Write-Host "Actual version is '${ActualVersion}'"

    if ($ActualVersion -like "v${ExpectedVersion}.*") {
        Write-Host "Helm version is correct"
        exit 0
    } else {
        Write-Host "Helm version is incorrect"
        exit 1
    }
  condition: eq( variables['Agent.OS'], 'Windows_NT' )

- script: |
    helm version --template='{{.Version}}';

    if ! helm version --template='{{.Version}}' | grep -q ${{ parameters.helmVersion }}; then
      echo "Helm version is incorrect" >>/dev/stderr
    fi
  condition: eq(False,  eq(variables['Agent.OS'], 'Windows_NT'))

