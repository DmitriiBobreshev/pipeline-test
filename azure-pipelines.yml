# resources:

#   repositories:
#   - repository: AzureDevOps
#     type: git
#     endpoint: AzureDevOps
#     name: AzureDevOps/AzureDevOps

variables:
  - group: secrets-groups
  - name: ndkPath
    value: TEST_NDK_PATH
  - name: androidSdkPath
    value: TEST_SDK_PATH
  - name: System.Debug
    value: true
  - name: build.clean
    value: all
  - name: agent.clean.buildDirectory
    value: all
  - name: scheme
    value: test
  - name: agent.diagnostic
    value: true
  - name: ARGS
    value: "123"

jobs:
  - job:
    pool: 
      vmImage: 'windows-2022'
    steps: 
      - script: mkdir test
      - script: mkdir test2
      - script: mkdir test2/test1
      - script: mkdir test2/test2
      - script: mkdir dir test2
      - script: |
          rmdir /s /q test
          rmdir /s /q test2/test2
# - job: 'default'
#   displayName: Job with default pool
#   pool: default
#   steps:
#     - template: src/msbuild/msbuild-steps-nugettoolinstaller-v0.yml
#       parameters:
#         solutionPath: '$(build.sourcesdirectory)/src/msbuild/projects/SimpleConsoleAppCore3/SimpleConsoleAppCore3.sln'
#     - template: src/msbuild/msbuild-steps-nugettoolinstaller-v1.yml
#       parameters:
#         solutionPath: '$(build.sourcesdirectory)/src/msbuild/projects/SimpleConsoleAppCore2/TestConsoleApp.sln'
# jobs:
# - job: 'Win2022'
#   displayName: Windows VS2022
#   pool:
#     name: 'Azure Pipelines'
#     vmImage: 'windows-2022'
#   steps:
#     - template: src/msbuild/msbuild-steps-nugettoolinstaller-v0.yml
#       parameters:
#         solutionPath: '$(build.sourcesdirectory)/src/msbuild/projects/SimpleConsoleAppCore3/SimpleConsoleAppCore3.sln'
#     - template: src/msbuild/msbuild-steps-nugettoolinstaller-v1.yml
#       parameters:
#         solutionPath: '$(build.sourcesdirectory)/src/msbuild/projects/SimpleConsoleAppCore2/TestConsoleApp.sln'
# - job: 'NugetInstall'
#   pool:
#     name: 'Default'
#   steps:
#   - script: |
#       echo $SECRET
#     env: 
#       SECRET: $(SECRET) 
#       NOSECRET: $(NOSECRET) 
#     # Publish artifact
#   - task: PublishPipelineArtifact@1
#     displayName: Publish package artifact
#     inputs:
#       targetPath: $(Build.SourcesDirectory)/_packag/task.zip
#       artifactName: allTasks
#       publishLocation: pipeline

#   # Publish code coverage result
#   - task: PublishCodeCoverageResults@1
#     displayName: Publish Code Coverage Results
#     inputs:
#       codeCoverageTool: Cobertura
#       summaryFileLocation: $(System.DefaultWorkingDirectory)/*coverage.xml