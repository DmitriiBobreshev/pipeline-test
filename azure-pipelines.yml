variables:
  - group: secrets-groups
  - name: ndkPath
    value: TEST_NDK_PATH
  - name: androidSdkPath
    value: TEST_SDK_PATH
  - name: System.Debug
    value: true
  - name: build.clean
    value: all
  - name: agent.clean.buildDirectory
    value: all
  - name: scheme
    value: test
  - name: agent.diagnostic
    value: true

# resources:
#   containers:
#   - container: my_container
#     image: node:latest
#   - container: nginx
#     image: nginx:latest


# pool: Default

# pool:
#     vmImage: 'ubuntu-latest'
 
# container:  ubuntu:18.04
# services:
  # nginx: nginx

# steps:
#   - script: |
#       cat /etc/hostname
#       export MY_ENV='test'
#       mkdir test
#       touch test/file_example
#   - script: |
#       cat /etc/hostname
#       sleep 10
#   - script: |
#       echo $MY_ENV
#       ls test

  

# --------------------------------------------------------------------------------------------------

pool: Default
  # vmImage: ubuntu-latest
steps:
- checkout: none
- bash: env | grep TEST_
  env:
    TEST_SEC_FROM_GROUP: $(vs-secret) # \nnvg secret1
    TEST_SEC_FROM_GROUP_2: $(vs-secret1) # vg secret2\n
    TEST_SEC_FROM_GROUP_3: $(vs-secret2) # vg\n secret3
    TEST_SEC_FROM_GROUP_4: $(vs-secret3) # vg secret4\n ; through the UI interface
- powershell: |
    $env:TEST_SEC_FROM_GROUP
    $env:TEST_SEC_FROM_GROUP_2
    $env:TEST_SEC_FROM_GROUP_3
    $env:TEST_SEC_FROM_GROUP_4
  env:
    TEST_SEC_FROM_GROUP: $(vs-secret) # \nnvg secret1
    TEST_SEC_FROM_GROUP_2: $(vs-secret1) # vg secret2\n
    TEST_SEC_FROM_GROUP_3: $(vs-secret2) # vg\n secret3
    TEST_SEC_FROM_GROUP_4: $(vs-secret3) # vg secret4\n ; through the UI interface