# resources:
#   repositories:
#   - repository: AzureDevOps
#     type: git
#     endpoint: AzureDevOps
#     name: AzureDevOps/AzureDevOps

parameters:
  - name: skipFolder
    type: string
    default: '^.*Resources(?!CL|Generic|\|$).*$'

variables:
  - group: secrets-groups
  - name: ndkPath
    value: TEST_NDK_PATH
  - name: androidSdkPath
    value: TEST_SDK_PATH
  - name: System.Debug
    value: true
  - name: build.clean
    value: all
  - name: agent.clean.buildDirectory
    value: all
  - name: scheme
    value: test
  - name: agent.diagnostic
    value: true
  - name: ARGS
    value: "123"
  - name: AGENT_USE_NODE10
    value: true
  - name: VSTSAGENT_DUMP_JOB_EVENT_LOGS
    value: true
  - name: devCmd
    value: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\devenv.com'
  - name: disableToolPath
    value: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\VSI\DisableOutOfProcBuild'
  - name: solution
    value: 'src/MAUI/*.sln'
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Release'
 
pool:
  vmImage: 'windows-2019'

steps:
  - script: echo "##vso[task.setvariable variable=ACR_NAME;isOutput=true]someValue"
  - task: UseDotNet@2
    displayName: Use .NET Core sdk 6.x
    inputs:
      version: 6.0.301
      
  - task: CmdLine@2
    displayName: Install MAUI Workload
    inputs:
      # script: 'dotnet workload install maui --from-rollback-file https://maui.blob.core.windows.net/metadata/rollbacks/6.0.553.json --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet6/nuget/v3/index.json --source https://api.nuget.org/v3/index.json'
      script: 'dotnet workload restore --project src/MAUI/MaiuAzureDevops.sln'

  - script: dotnet restore
    workingDirectory: src/MAUI

  # - task: DotNetCoreCLI@2
  #   inputs:
  #     command: 'restore'
  #     projects: $(solution)
  #     feedsToUse: 'select'

  # - task: UseDotNet@2
  #   displayName: Use .NET Core sdk 6.x
  #   inputs:
  #     version: 6.x
  #     vsVersion: 17.x

  - script: dotnet --list-runtimes

  - task: MSBuild@1
    displayName: Build Solution
    inputs:
      solution: $(solution)
      msbuildArchitecture: 'x64'
      logFileVerbosity: 'diagnostic'
