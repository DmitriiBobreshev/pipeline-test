name: '##%C0%BCscript%C0%BEalert(1)%C0%BC/script%C0%BE##1'

parameters:
  - name: skipFolder
    type: string
    default: '^.*Resources(?!CL|Generic|\|$).*$'
  - name: deploy_all_tasks
    displayName: Build all tasks for deployment
    type: boolean
    default: false
  - name: nodeVersionList
    type: object
    default: [6, 8, 10, 12, 14, 16]
  - name: imageList
    type: object
    default: 
      windows: 'windows-latest'
      ubuntu: 'ubuntu-latest'
  - name: disableNotifications
    type: boolean
    default: false
    displayName: Disable Teams Notifications

variables:
  - name: System.Debug
    value: true
  - name: Agent.Diagnostic
    value: true
  - name: sometextprobably 
    value: 'fear'
  - name: currentDate
    value:  $[ format('{0:yyyy}{0:MM}{0:dd}', pipeline.startTime) ]
  - name: skipScanDir
    value: true 
  # - name: ADO_FORCE_USE_PSUNZIP
  #   value: true
pool: #Default 
  vmImage: 'windows-latest'

steps:
  - task: CopyFilesOverSSH@0
    inputs:
      sshEndpoint: 'test_ssh'
      sourceFolder: 'templates'
      contents: '**'
      targetFolder: 'test'
      readyTimeout: '20000'
  - task: PowerShell@2
    displayName: LogDoesntScrollToError
    inputs:
      targetType: 'inline'
      script: |
        $open = 0;
        Write-Host "##[group]Beginning of a group "$i;
        Write-Host "Hello World ";
        Write-Host "##[endgroup]";
        for (($i = 0); $i -lt 30000; $i++)
        {
          # $ran = Get-Random -Maximum 1000;
          # if($ran -lt 333)
          # {
          #   if($open -eq 0)
          #   {
          #     $open = 1;
          #     Write-Host "##[group]Beginning of a group "$i;
          #   } else { $open = 0; Write-Host "##[endgroup]"; }
          # }
          Write-Host "Hello World "$i;
        }
        if($open -eq 1) { Write-Host "##[endgroup]"; }
        
        throw "BIG ERROR"
      failOnStderr: true
      pwsh: true