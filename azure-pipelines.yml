variables:

  - name: ndkPath
    value: TEST_NDK_PATH
  - name: androidSdkPath
    value: TEST_SDK_PATH
  - name: System.Debug
    value: true
  - name: build.clean
    value: all
  - name: agent.clean.buildDirectory
    value: all
  - name: scheme
    value: test

# resources:
#   containers:
#   - container: my_container
#     image: node:latest
#   - container: nginx
#     image: nginx:latest


# pool: Default

# pool:
#     vmImage: 'ubuntu-latest'
 
# container: my_container
# services:
#   nginx: nginx

# steps:
#   # - script: | 
#   #     curl nginx 
#   - script: |
#       docker ps
#     target: host

#   - script: |
#       cat /etc/hostname
#     target: my_container

#   - script: 
#       cat /etc/hostname
#     target: nginx

# --------------------------------------------------------------------------------------------------

jobs:
  - job: 'Ubuntu'
    pool:
      name: 'Azure Pipelines'
      vmImage: 'ubuntu-latest'
    steps:
      - script: |
          mkdir $(Agent.BuildDirectory)/reports;
        displayName: Create report dir
      - task: Bash@3
        displayName: unset git auth header
        env:
          NODE_OPTIONS: "--report-uncaught-exception --report-on-signal --report-on-fatalerror --report-filename=$(Agent.BuildDirectory)/reports/report.json"
        inputs:
          targetType: inline
          script: |
            your script here
      - task: PublishPipelineArtifact@1
        condition: failed()
        inputs:
          targetPath: '$(Agent.BuildDirectory)/reports'
          artifactType: 'pipeline'
          artifactName: 'drop'
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'specific'
          project: '4098af9f-9bef-4a67-8087-64b5d95a7597'
          pipeline: '2'
          buildVersionToDownload: 'latest'
          downloadType: 'specific'
          downloadPath: '$(System.ArtifactsDirectory)'