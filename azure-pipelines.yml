# resources:


#   repositories:
#   - repository: AzureDevOps
#     type: git
#     endpoint: AzureDevOps
#     name: AzureDevOps/AzureDevOps

parameters:
- name: solutionTarget
  type: string
  default: 'someSolutionTarget'
- name: msBuildArguments
  type: string
  default: ''
- name: binSourcePath
  type: string
  default: ''

variables:
  - name: System.Debug
    value: true
  - name: build.clean
    value: all
  - name: agent.clean.buildDirectory
    value: all
  - name: agent.diagnostic
    value: true
  # - name: sourceDir
  #   value: $(Build.SourcesDirectory)
  # - name: msBuildArgumentsVar
  #   value: ${{ coalesce(parameters.msBuildArguments, format('-target:{0}', parameters.solutionTarget)) }}
  # - name: binSourcePath
  #   value: ${{ coalesce(parameters.binSourcePath, format('{0}/{1}/bin', variables.sourceDir, parameters.solutionTarget )) }}

jobs:
- job: 'Example'
  pool:
    # name: 'Default'
    vmImage: 'ubuntu-22.04'
  steps:
  - bash: |
      if [ -z "${{ parameters.msBuildArguments }}" ]; then
        echo "##vso[task.setvariable variable=msBuildArgumentsVar]-target:${{ parameters.solutionTarget }}"
      else
        echo "##vso[task.setvariable variable=msBuildArgumentsVar]${{ parameters.msBuildArguments }}"
      fi
      if [ -z "${{ parameters.binSourcePath }}" ]; then
        echo "##vso[task.setvariable variable=binSourcePathVar]$(Build.SourcesDirectory)/${{ parameters.solutionTarget }}/bin"
      else
        echo "##vso[task.setvariable variable=binSourcePathVar]${{ parameters.binSourcePath }}"
      fi
  - script: | 
      echo "msBuildArgumentsVar: $(msBuildArgumentsVar)" 
      echo "binSourcePath: $(binSourcePath)" 
      echo "sourceDir: $(sourceDir)"