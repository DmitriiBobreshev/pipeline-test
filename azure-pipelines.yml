# variables:
#  - name: task
#    value: MSBuildV1

# jobs:

# # All tasks on Windows
# - job: build_all_windows
#   displayName: Build all tasks (Windows)
#   condition: and(succeeded(), not(variables.task), eq(variables.os, 'Windows_NT'))
#   pool: win-11-pool
#   timeoutInMinutes: 120
#   steps:
#   - template: ci/build-all-steps.yml
#     parameters:
#       os: Windows_NT

# # All tasks on Linux
# - job: build_all_linux
#   displayName: Build all tasks (Linux)
#   condition: and(succeeded(), not(variables.task), eq(variables.os, 'Linux'))
#   pool:  win-11-pool
#   steps:
#   - template: ci/build-all-steps.yml
#     parameters:
#       os: Linux

# # Single task
# - job: buildSingle
#   displayName: Build single task
#   condition: and(succeeded(), variables.task)
#   pool: 
#     vmImage: windows-latest
#   steps:
#   - template: ci/build-single-steps.yml

# # Single task
# - job: buildSingle
#   displayName: Build single task
#   condition: and(succeeded(), variables.test)
#   pool:
#     vmImage: windows-2022
#   steps:
#   # Verify min agent version demands
#   - script: |
#     cd ci
#     cd verifyMinAgentDemands
#     npm install
#     node index.js
#   displayName: Verify all min agent demands are valid


# Starter pipeline


# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  NODE_OPTIONS: --max_old_space_size=2048

stages:
- stage: __default
  jobs:
  - job: WinTest
    pool: 
      vmImage: windows-2019
    steps:
    - task: UseNode@1
      inputs:
        version: 'v14.17.1'
      displayName: 'Install Node.js v14.17.1'
    - powershell: | 
        node -v
        npm -v
      displayName: Show npm and node version After
    - task: UseNode@1
      inputs:
        version: 'v18.3.0'
        checkLatest: true
      displayName: 'Install Node.js v18.3.0'
    - powershell: | 
        node -v
        npm -v
      displayName: Show npm and node version After
    - task: UseNode@1
      inputs:
        version: 'v12.4.0'
        checkLatest: true
        force32bit: true
      displayName: 'Install 32bit Node.js v12.4.0'
    - powershell: | 
        node -v
        npm -v
      displayName: Show npm and node version After
    - powershell: | 
        ls _work/_tool/node
      displayName: Show all installed versioins
  - job: UbuntuTest
    pool: 
      vmImage: ubuntu-latest
    steps:
    - task: UseNode@1
      inputs:
        version: 'v14.17.1'
      displayName: 'Install Node.js v14.17.1'
    - powershell: | 
        node -v
        npm -v
      displayName: Show npm and node version After
    - task: UseNode@1
      inputs:
        version: 'v18.3.0'
        checkLatest: true
      displayName: 'Install Node.js v18.3.0'
    - powershell: | 
        node -v
        npm -v
      displayName: Show npm and node version After
    - task: UseNode@1
      inputs:
        version: 'v12.4.0'
        checkLatest: true
        force32bit: true
      displayName: 'Install 32bit Node.js v12.4.0'
    - powershell: | 
        node -v
        npm -v
      displayName: Show npm and node version After
    - powershell: | 
        ls _work/_tool/node
      displayName: Show all installed versioins